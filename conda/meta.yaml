{% set pyproject = load_file_data('../pyproject.toml', from_recipe_dir=True) %}
{% set name = pyproject.get('project').get('name') %}
{% set description = pyproject.get('project').get('description') %}
{% set version = environ.get('SETUPTOOLS_SCM_PRETEND_VERSION', "0.0.0.dev") %}
{% set license = pyproject.get('project').get('license') %}
{% set home = pyproject.get('project', {}).get('urls', {}).get('Homepage', '') %}
{% set build_deps = pyproject.get("build-system", {}).get("requires", []) %}
{% set deps = pyproject.get('project', {}).get('dependencies', []) %}
{% set conda_deps = pyproject.get('tool', {}).get('conda', {}).get('environment', {}).get('dependencies',[]) %}
{% set test_deps = pyproject.get('project', {}).get('optional-dependencies', {}).get('test',[]) %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  path: ..

build:
  noarch: python
  number: 0
  preserve_egg_dir: True
  string: py{{ PY_VER }}
  # pip install options mainly ensure that dependencies are handled by conda (and not pip)
  # --no-deps ensure pip will not install deps not declared in meta.yaml (but declared in pyproject.toml)
  # --no-build-isolation ensure pip will not replace build deps declared in meta.yaml (and declared in pyproject.toml)
  # --ignore-installed ensure that compiled files (accidentally present in sources or uncleaned locally) will be overwritten
  script: {{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-build-isolation -vv

requirements:
  build:
    - python
    {% for dep in build_deps %}
    - {{ dep }}
    {% endfor  %}

  run:
    - python
    {% for dep in deps + conda_deps %}
    - {{ dep }}
    {% endfor %}


test:
  requires:
    {% for dep in test_deps %}
    - {{ dep }}
    {% endfor %}

  imports:
    - {{ pyproject["project"]["name"] }}

  source_files:
    - test/**


  commands:
    - cd test
    - pytest -v

about:
  home: {{ home }}
  summary: {{ description }}
  license: {{ license }}

extra:
  recipe-maintainers:
    - GeraultTr
    - pradal
